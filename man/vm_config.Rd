% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vm_config.R
\name{vm_config}
\alias{vm_config}
\alias{ubuntu_dsvm}
\alias{windows_dsvm}
\alias{ubuntu_16.04}
\alias{ubuntu_18.04}
\alias{windows_2016}
\alias{windows_2019}
\alias{rhel_7.6}
\alias{rhel_8}
\alias{debian_9_backports}
\title{VM configuration functions}
\usage{
vm_config(image, keylogin, managed = TRUE, datadisks = numeric(0),
  nsg = nsg_config(), ip = ip_config(), vnet = vnet_config(),
  nic = nic_config(), other_resources = list(), variables = list())

ubuntu_dsvm(keylogin = TRUE, managed = TRUE, datadisks = numeric(0),
  nsg = nsg_config(list(nsg_rule_allow_ssh, nsg_rule_allow_jupyter,
  nsg_rule_allow_rstudio)), ...)

windows_dsvm(keylogin = FALSE, managed = TRUE,
  datadisks = numeric(0), nsg = nsg_config(list(nsg_rule_allow_rdp)),
  ...)

ubuntu_16.04(keylogin = TRUE, managed = TRUE, datadisks = numeric(0),
  nsg = nsg_config(list(nsg_rule_allow_ssh)), ...)

ubuntu_18.04(keylogin = TRUE, managed = TRUE, datadisks = numeric(0),
  nsg = nsg_config(list(nsg_rule_allow_ssh)), ...)

windows_2016(keylogin = FALSE, managed = TRUE,
  datadisks = numeric(0), nsg = nsg_config(list(nsg_rule_allow_rdp)),
  ...)

windows_2019(keylogin = FALSE, managed = TRUE,
  datadisks = numeric(0), nsg = nsg_config(list(nsg_rule_allow_rdp)),
  ...)

rhel_7.6(keylogin = TRUE, managed = TRUE, datadisks = numeric(0),
  nsg = nsg_config(list(nsg_rule_allow_ssh)), ...)

rhel_8(keylogin = TRUE, managed = TRUE, datadisks = numeric(0),
  nsg = nsg_config(list(nsg_rule_allow_ssh)), ...)

debian_9_backports(keylogin = TRUE, managed = TRUE,
  datadisks = numeric(0), nsg = nsg_config(list(nsg_rule_allow_ssh)),
  ...)
}
\arguments{
\item{image}{For \code{vm_config}, the VM image to deploy. This should be an object of class \code{image_config}, created by the function of the same name.}

\item{keylogin}{Boolean: whether to use an SSH public key to login (TRUE) or a password (FALSE). Note that Windows does not support SSH key logins.}

\item{managed}{Whether to provide a managed system identity for the VM.}

\item{datadisks}{The data disks to attach to the VM. Specify this as either a vector of numeric disk sizes in GB, or a list of \code{datadisk_config} objects for more control over the specification.}

\item{nsg}{The network security group for the VM. Can be a call to \code{nsg_config} to create a new NSG; an AzureRMR resource object or resource ID to reuse an existing NSG; or NULL to not use an NSG (not recommended).}

\item{ip}{The public IP address for the VM. Can be a call to \code{ip_config} to create a new IP address; an AzureRMR resource object or resource ID to reuse an existing address resource; or NULL if the VM should not be accessible from outside its subnet.}

\item{vnet}{The virtual network for the VM. Can be a call to \code{vnet_config} to create a new virtual network, or an AzureRMR resource object or resource ID to reuse an existing virtual network.}

\item{nic}{The network interface for the VM. Can be a call to \code{nic_config} to create a new interface, or an AzureRMR resource object or resource ID to reuse an existing interface.}

\item{other_resources}{An optional list of other resources to include in the deployment.}

\item{variables}{An optional named list of variables to add to the template.}

\item{...}{For the specific VM configurations, other customisation arguments to be passed to \code{vm_config}.}
}
\value{
An object of S3 class \code{vm_config}, that can be used by the \code{create_vm} method.
}
\description{
VM configuration functions
}
\details{
These functions are for specifying the details of a new virtual machine deployment: the VM image and related options, along with the Azure resources that the VM may need. These include the datadisks, network security group, public IP address (if the VM is to be accessible from outside its subnet), virtual network, and network interface.

Each resource can be specified in a number of ways:
\itemize{
\item To \emph{create} a new resource as part of the deployment, call the corresponding \code{*_config} function.
\item To use an \emph{existing} resource, supply either an \code{AzureRMR::az_resource} object (recommended) or a string containing the resource ID.
\item If the resource is not needed, specify it as NULL.
\item For the \code{other_resources} argument, supply a list of resources, each of which should be a list of resource fields (name, type, properties, sku, etc).
}

The \code{vm_config} function is the base configuration function, and the others call it to create VMs with specific operating systems and other image details.
\itemize{
\item \code{ubuntu_dsvm}: Data Science Virtual Machine, based on Ubuntu 16.04
\item \code{windows_dsvm}: Data Science Virtual Machine, based on Windows Server 2016
\item \code{ubuntu_16.04}, \code{ubuntu_18.04}: Ubuntu operating system
\item \code{windows_2016}, \code{windows_2019}: Windows Server Datacenter edition
\item \code{rhel_7.6}, \code{rhel_8}: Red Hat Enterprise Linux
\item \code{debian_9_backports}: Debian
}
}
\seealso{
\link{image_config}, \link{user_config}, \link{datadisk_config} for options relating to the VM resource itself

\link{nsg_config}, \link{ip_config}, \link{vnet_config}, \link{nic_config} for other resource configs

\link{vmss_config} for configuring a virtual machine scaleset

\link{create_vm}
}
